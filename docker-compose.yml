version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: edifice-postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - edifice_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: edifice-backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=${SPRING_JPA_HIBERNATE_DDL_AUTO}
      - SPRING_WEB_CORS_ALLOWED_ORIGINS=${SPRING_WEB_CORS_ALLOWED_ORIGINS}
    networks:
      - edifice_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edifice-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_USE_MOCK_API=${VITE_USE_MOCK_API}
    networks:
      - edifice_network

networks:
  edifice_network:

volumes:
  postgres_data:
